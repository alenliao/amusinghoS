// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using amusinghoS.EntityData;

namespace amusinghoS.EntityData.Migrations
{
    [DbContext(typeof(amusinghoSDbContext))]
    [Migration("20200303095501_base")]
    partial class @base
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("amusinghoS.EntityData.Model.amusingArticle", b =>
                {
                    b.Property<string>("articleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(48)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DelTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeleteId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(130)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("articleId");

                    b.ToTable("amusingArticles");
                });

            modelBuilder.Entity("amusinghoS.EntityData.Model.amusingArticleDetails", b =>
                {
                    b.Property<string>("articleDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AmusingArticlearticleId")
                        .HasColumnType("varchar(48)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DelTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeleteId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Html")
                        .HasColumnType("varchar(48)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("articleDetailsId");

                    b.HasIndex("AmusingArticlearticleId");

                    b.ToTable("amusingArticleDetails");
                });

            modelBuilder.Entity("amusinghoS.EntityData.Model.amusingHosUser", b =>
                {
                    b.Property<string>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4")
                        .HasMaxLength(16);

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(18) CHARACTER SET utf8mb4")
                        .HasMaxLength(18);

                    b.HasKey("userId");

                    b.ToTable("amusingHosUsers");
                });

            modelBuilder.Entity("amusinghoS.EntityData.Model.amusingArticleDetails", b =>
                {
                    b.HasOne("amusinghoS.EntityData.Model.amusingArticle", "AmusingArticle")
                        .WithMany()
                        .HasForeignKey("AmusingArticlearticleId");
                });
#pragma warning restore 612, 618
        }
    }
}
